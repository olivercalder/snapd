summary: Refresh and revert the fundamental snaps for uc20

description: |
    This test validates the fundamental snaps can be refreshed
    and reverted to the new snaps published to edge channel.

systems: [ubuntu-20.04-*]

environment:
    CORE_CHANNEL: beta
    CORE_REFRESH_CHANNEL: edge
    BUILD_SNAPD_FROM_CURRENT: false
    USE_CLOUD_INIT: true
    ENABLE_SECURE_BOOT: true
    ENABLE_TPM: true

    SNAP/kernel: pc-kernel
    BRANCH/kernel: 20
    REBOOTS/kernel: true

    SNAP/gadget: pc    
    BRANCH/gadget: 20
    REBOOTS/gadget: true

    SNAP/snapd: snapd
    BRANCH/snapd: latest
    REBOOTS/snapd: false

    SNAP/base: core20
    BRANCH/base: latest
    REBOOTS/base: true

prepare: |
    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"
    
    FROM_REV="$(get_snap_rev_for_channel "$SNAP" $BRANCH/$CORE_CHANNEL)"
    TO_REV="$(get_snap_rev_for_channel "$SNAP" $BRANCH/$CORE_REFRESH_CHANNEL)"

    if [ "$FROM_REV" = "$TO_REV" ]; then
        echo "Initial and target revisions are the same, skipping..."
        touch skip.test
        exit
    fi

    create_nested_core_vm
    start_nested_core_vm

restore: |
    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"

    if [ -f skip.test ]; then
        rm -f skip.test
        exit
    fi

    destroy_nested_vm
    cleanup_nested_env

    rm -f "$WORK_DIR/image/ubuntu-core.img"

execute: |
    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"

    if [ -f skip.test ]; then
        exit
    fi

    FROM_REV="$(get_snap_rev_for_channel "$SNAP" $BRANCH/$CORE_CHANNEL)"
    TO_REV="$(get_snap_rev_for_channel "$SNAP" $BRANCH/$CORE_REFRESH_CHANNEL)"

    execute_remote "snap list $SNAP" | MATCH "^${SNAP}.*${FROM_REV}.*${BRANCH}/${CORE_CHANNEL}.*"
    # The snap is refreshed
    execute_remote "sudo snap refresh --channel $CORE_REFRESH_CHANNEL $SNAP" || true

    if [ "$REBOOTS" = "true" ]; then
        # Wait for system reboot
        wait_for_no_ssh
        wait_for_ssh
    fi

    # Check the new version of the snaps is correct after the system reboot
    execute_remote "snap list $SNAP" | MATCH "^${SNAP}.*${TO_REV}.*${BRANCH}/${CORE_REFRESH_CHANNEL}.*"

    # The snap is reverted
    execute_remote "sudo snap revert $SNAP" || true

    if [ "$REBOOTS" = "true" ]; then
        # Wait for system reboot
        wait_for_no_ssh
        wait_for_ssh
    fi

    # Check the version of the snaps after the revert is correct
    execute_remote "snap list $SNAP" | MATCH "^${SNAP}.*${FROM_REV}.*${BRANCH}/${CORE_REFRESH_CHANNEL}.*"
