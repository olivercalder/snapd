summary: create ubuntu classic image, install snapd and test hot plug feature

systems: [ubuntu-16.04-64, ubuntu-18.04-64]

prepare: |

    "$TESTSLIB"/prepare-restore.sh --prepare-suite
    "$TESTSLIB"/prepare-restore.sh --prepare-suite-each

    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"
    create_nested_classic_vm
    copy_remote "${GOHOME}"/snapd_*.deb
    execute_remote 'sudo apt update'
    execute_remote 'sudo apt install -y ./snapd_*.deb'
    execute_remote 'sudo apt install -y linux-image-extra-$(uname -r)'

    snap pack "$TESTSLIB"/snaps/serial-port-hotplug
    copy_remote serial-port-hotplug_1.0_all.snap

restore: |
    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"
    destroy_nested_vm

    "$TESTSLIB"/prepare-restore.sh --restore-suite-each
    "$TESTSLIB"/prepare-restore.sh --restore-suite

    #shellcheck source=tests/lib/pkgdb.sh
    . "$TESTSLIB/pkgdb.sh"
    distro_install_package snapd

execute: |
    hotplug_add() {
        add_tty_chardev my-chardev /dev/tty5
        add_usb_serial_device my-usb-serial my-chardev
    }

    hotplug_del() {
        del_device my-usb-serial
        remove_chardev my-chardev
    }

    check_slot_not_present() {
        for _ in $(seq 10); do
            if ! execute_remote "snap interfaces" | MATCH ":qemuusbserial"; then
                break
            fi
            sleep 0.5
        done
        if execute_remote "snap interfaces" | MATCH ":qemuusbserial"; then
            echo "qemuusbserial interface shouldn't be present anymore"
        exit 1
        fi
    }

    check_slot_present() {
        for _ in $(seq 10); do
            if execute_remote "snap interfaces" | MATCH ":qemuusbserial"; then
                break
            fi
            sleep 0.5
        done
        execute_remote "snap interfaces" | MATCH ":qemuusbserial"
    }

    check_slot_connected() {
        execute_remote "snap interfaces" | MATCH ":qemuusbserial.*serial-port-hotplug"
    }

    #shellcheck source=tests/lib/nested.sh
    . "$TESTSLIB/nested.sh"

    if execute_remote "udevadm info -e" | MATCH "ID_MODEL=QEMU_USB_SERIAL"; then
        echo "Usb serial already registered, exiting..."
        exit 1
    fi

    execute_remote "sudo snap install hello-world"

    echo "Enabling hotplug"
    execute_remote "sudo snap set core experimental.hotplug=true"

    hotplug_add

    execute_remote "udevadm info -e" | MATCH "ID_MODEL=QEMU_USB_SERIAL"
    execute_remote 'ls /dev/tty*' | MATCH "ttyUSB0"

    echo "Checking that qemuusbserial hotplug slot is present"
    check_slot_present

    hotplug_del

    if execute_remote "udevadm info -e" | MATCH "ID_MODEL=QEMU_USB_SERIAL"; then
        echo "Usb serial should not be registered anymore, exiting..."
        exit 1
    fi

    echo "Checking that qemuusbserial hotplug slot is no longer present"
    check_slot_not_present

    hotplug_add

    echo "Checking that qemuusbserial hotplug slot is present"
    check_slot_present

    execute_remote "sudo snap install --dangerous serial-port-hotplug_1.0_all.snap"

    echo "Connecting serial-port interface"
    execute_remote "sudo snap connect serial-port-hotplug:serial-port :qemuusbserial"
    check_slot_connected

    echo "Veryfing serial-port permissions"
    execute_remote "cat /var/lib/snapd/apparmor/profiles/snap.serial-port-hotplug.consumer" | MATCH "/dev/ttyUSB0 rw,"
    execute_remote "sudo serial-port-hotplug.consumer" | MATCH "Access to /dev/ttyUSB0 ok"

    hotplug_del

    echo "Checking that qemuusbserial hotplug slot is no longer present"
    check_slot_not_present



