summary: smoke test for the boot-state tool

execute: |

    # Check help
    "$TESTSTOOLS"/boot-state | MATCH "usage: bootenv"
    "$TESTSTOOLS"/boot-state -h | MATCH "usage: bootenv"
    "$TESTSTOOLS"/boot-state --help | MATCH "usage: bootenv"

    # check the bootenv command
    case "$SPREAD_SYSTEM" in
        ubuntu-core-16-*|ubuntu-core-18-*)
            # check snap_core and snap_kernel vars are set in bootnev
            "$TESTSTOOLS"/boot-state bootenv | MATCH 'snap_core=core.*.snap'
            "$TESTSTOOLS"/boot-state bootenv | MATCH 'snap_kernel=.*-kernel_.*.snap'
            ;;
        ubuntu-core-20-*)
            # check kernel_status var is set in bootnev
            "$TESTSTOOLS"/boot-state bootenv | MATCH 'kernel_status='
            ;;
        *)
            # check bootnev command can be called
            "$TESTSTOOLS"/boot-state bootenv     
            ;; 
    esac

    # check the get-boot-path command
    case "$SPREAD_SYSTEM" in
        ubuntu-core-16-arm-*|ubuntu-core-18-arm-*|ubuntu-core-20-arm-*)
            "$TESTSTOOLS"/boot-state get-boot-path | MATCH "/boot/uboot/"
            ;;
        fedora-*|opensuse-*|amazon-*|centos-*)
            "$TESTSTOOLS"/boot-state get-boot-path | MATCH "/boot/grub2/"
            ;;
        *)
            "$TESTSTOOLS"/boot-state get-boot-path | MATCH "/boot/grub/"
            ;;
    esac

    # check a new var can be set in bootenv
    "$TESTSTOOLS"/boot-state bootenv | NOMATCH 'snap_boot_state_test='
    "$TESTSTOOLS"/boot-state bootenv-set snap_boot_state_test test
    "$TESTSTOOLS"/boot-state bootenv | MATCH 'snap_boot_state_test=test$'

    # check a var can be set even if it is already defined in bootenv
    "$TESTSTOOLS"/boot-state bootenv-set snap_boot_state_test test
    test "$("$TESTSTOOLS"/boot-state bootenv | grep -c snap_boot_state_test)" -eq 1

    # check an existing var can be unset in bootenv
    "$TESTSTOOLS"/boot-state bootenv-unset snap_boot_state_test
    "$TESTSTOOLS"/boot-state bootenv | NOMATCH 'snap_boot_state_test='

    # check an unexisting var can be unset in bootenv
    "$TESTSTOOLS"/boot-state bootenv-unset snap_boot_no_exist

    # wait-core-post-boot should finish inmediatly
    "$TESTSTOOLS"/boot-state wait-core-post-boot
