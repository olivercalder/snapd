summary: Check that snap after/before ordering works

execute: |
    echo "When the service snap is installed"

    cursor=$("$TESTSTOOLS"/journal-state get-last-cursor)

    # we are using systemd-notify indicate the service is active, this is
    # currently not allowed by daemon-notify interface, so we may as well just
    # install in devmode
    "$TESTSTOOLS"/snaps-state install-local test-snapd-after-before-service --devmode

    echo "We can see all services running"
    for service in before-middle middle after-middle; do
        systemctl status snap.test-snapd-after-before-service.$service | MATCH "running"
    done

    echo "Service 'middle' is started after 'before-middle'"
    systemctl list-dependencies --plain --after snap.test-snapd-after-before-service.middle.service | \
        MATCH '\s*snap.test-snapd-after-before-service.before-middle.service'

    echo "Service 'middle' is started before 'after-middle'"
    systemctl list-dependencies --plain --before snap.test-snapd-after-before-service.middle.service | \
        MATCH '\s*snap.test-snapd-after-before-service.after-middle.service'

    START_LOG=/var/snap/test-snapd-after-before-service/common/start-log
    function check_order() {
        tr '\n' ',' < "$START_LOG" | \
            MATCH "before-middle,middle,after-middle"
        rm "$START_LOG"
    }

    check_order

    echo "Stopping and starting the services"
    snap stop test-snapd-after-before-service
    snap start test-snapd-after-before-service

    check_order

    echo "Restarting services via restart"
    snap restart test-snapd-after-before-service

    check_order
