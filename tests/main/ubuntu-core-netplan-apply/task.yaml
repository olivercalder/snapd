summary: Ensure that netplan apply works on Ubuntu Core with network-setup-control

details: |
    Netplan apply is used to apply network configuration to the system

environment:
    NETPLAN: io.netplan.Netplan

# only run on ubuntu core systems
systems:
    - ubuntu-core-*

prepare: |
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB"/snaps.sh
    snap install test-snapd-netplan-apply --edge

execute: |
    # shellcheck source=tests/lib/journalctl.sh
    . "$TESTSLIB/journalctl.sh"

    echo "The interface is disconnected by default"
    snap connections test-snapd-netplan-apply | MATCH 'network-setup-control +test-snapd-netplan-apply:network-setup-control +- +-'

    echo "Running netplan apply without network-setup-control fails"
    if test-snapd-netplan-apply.netplan apply; then
        echo "Expected access denied error for netplan apply"
        exit 1
    fi

    echo "Count how many network service restarts happened before calling netplan apply"
    wait_for_network_config_stopped_before="$(get_journalctl_log -u systemd-networkd | grep -c 'Stopped Network Service.' || true)"
    wait_for_network_config_started_before="$(get_journalctl_log -u systemd-networkd | grep -c 'Started Network Service.' || true)"

    echo "When the interface is connected"
    snap connect test-snapd-netplan-apply:network-setup-control

    echo "Running netplan apply now works"
    if ! test-snapd-netplan-apply.netplan apply; then
        echo "Unexpected error running netplan apply"
        exit 1
    fi

    echo "Ensure that network config was stopped and restarted from netplan"
    for _ in $(seq 60); do
        wait_for_network_config_stopped_after="$(get_journalctl_log -u systemd-networkd | grep -c 'Stopped Network Service.' || true)"
        wait_for_network_config_started_after="$(get_journalctl_log -u systemd-networkd | grep -c 'Started Network Service.' || true)"
        if [ "$wait_for_network_config_stopped_after" -gt "$wait_for_network_config_stopped_before" ] && \
           [ "$wait_for_network_config_started_after" -gt "$wait_for_network_config_started_before" ] ; then
            break
        fi
        sleep 1
    done

    echo "Ensure that the number of network restarts is greater after netplan apply was run"
    [ "$wait_for_network_config_stopped_after" -gt "$wait_for_network_config_stopped_before" ] && \
        [ "$wait_for_network_config_started_after" -gt "$wait_for_network_config_started_before" ]
