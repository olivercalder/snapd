summary: |
   Test remodel

systems: [ubuntu-core-16-64]

prepare: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi
    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB"/systemd.sh
    systemctl stop snapd.service snapd.socket
    rm -rf /var/lib/snapd/assertions/*
    rm -rf /var/lib/snapd/device
    rm -rf /var/lib/snapd/state.json
    mv /var/lib/snapd/seed/assertions/model model.bak
    cp "$TESTSLIB"/assertions/developer1.account /var/lib/snapd/seed/assertions
    cp "$TESTSLIB"/assertions/developer1.account-key /var/lib/snapd/seed/assertions
    cp "$TESTSLIB"/assertions/developer1-pc.model /var/lib/snapd/seed/assertions
    cp "$TESTSLIB"/assertions/testrootorg-store.account-key /var/lib/snapd/seed/assertions
    # kick first boot again
    systemctl start snapd.service snapd.socket

restore: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi
    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB"/systemd.sh
    systemctl stop snapd.service snapd.socket
    rm -rf /var/lib/snapd/assertions/*
    rm -rf /var/lib/snapd/device
    rm -rf /var/lib/snapd/state.json

    rm -f /var/lib/snapd/seed/assertions/developer1.account
    rm -f /var/lib/snapd/seed/assertions/developer1.account-key
    rm -f /var/lib/snapd/seed/assertions/developer1-pc.model
    rm -f /var/lib/snapd/seed/assertions/testrootorg-store.account-key
    rm -f /var/lib/snapd/seed/assertions/test-snapd-with-configure_*.assert
    cp model.bak /var/lib/snapd/seed/assertions/model
    rm -f ./*.bak
    # kick first boot again
    systemctl start snapd.service snapd.socket
    # wait for first boot to be done
    while ! snap changes | grep -q "Done.*Initialize system state"; do sleep 1; done

execute: |
    if [ "$TRUST_TEST_KEYS" = "false" ]; then
        echo "This test needs test keys to be trusted"
        exit
    fi

    # sanity check
    ! snap list test-snapd-tools
    
    echo "Wait for first boot to be done"
    while ! snap changes | grep -q "Done.*Initialize system state"; do sleep 1; done
    echo "We have the right model assertion"
    snap debug get-model|MATCH "model: my-model"

    echo "Now we remodel"
    snap remodel "$TESTSLIB"/assertions/developer1-pc-revno2.model

    echo "and we got the new required snap"
    snap list test-snapd-tools

    # FIXME: check that this is the active model assertion
    echo "and we got the new model assertion"
    snap debug get-model|MATCH "revision: 2"
