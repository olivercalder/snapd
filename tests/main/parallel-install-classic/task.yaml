summary: Checks parallel installation of classic snaps

# core does not support classic confinement
systems: [-ubuntu-core-*]

prepare: |
    # ensure we have no snap user data directory yet
    rm -rf /home/test/snap
    rm -rf /var/snap/test-snapd-classic-confinement
    rm -rf /var/snap/test-snapd-classic-confinement_foo

    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB"/snaps.sh
    #shellcheck source=tests/lib/dirs.sh
    . "$TESTSLIB"/dirs.sh
    snap pack "$TESTSLIB/snaps/test-snapd-classic-confinement/"

    case "$SPREAD_SYSTEM" in
        fedora-*|arch-*|centos-*)
            # although classic snaps do not work out of the box on fedora,
            # we still want to verify if the basics do work if the user
            # symlinks /snap to $SNAP_MOUNT_DIR themselves
            ln -sf "$SNAP_MOUNT_DIR" /snap
            ;;
    esac

    snap set system experimental.parallel-instances=true

execute: |
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB"/snaps.sh

    install_local test-snapd-classic-confinement --classic
    install_local_as test-snapd-classic-confinement test-snapd-classic-confinement_foo --classic

    su -l -c '! test -d ~/snap/test-snapd-classic-confinement' test
    su -l -c '! test -d ~/snap/test-snapd-classic-confinement_foo' test
    not test -d ~/snap/test-snapd-classic-confinement
    not test -d ~/snap/test-snapd-classic-confinement_foo

    # running the snap as a user works
    su -l -c "test-snapd-classic-confinement_foo.sh -c 'echo foo'" test | MATCH foo
    # user directory was created
    su -l -c 'test -d ~/snap/test-snapd-classic-confinement_foo' test

    # running as root works
    test-snapd-classic-confinement_foo.sh -c "echo foo" | MATCH foo

    # instance environment variables are correctly set up
    su -l -c 'test-snapd-classic-confinement_foo.sh -c env' test > snap_foo-env.txt
    MATCH 'SNAP_INSTANCE_NAME=test-snapd-classic-confinement_foo'                      < snap_foo-env.txt
    MATCH 'SNAP_NAME=test-snapd-classic-confinement'                                   < snap_foo-env.txt
    MATCH 'SNAP_INSTANCE_KEY=foo'                                                      < snap_foo-env.txt
    MATCH 'SNAP=/snap/test-snapd-classic-confinement/x1'                               < snap_foo-env.txt
    MATCH 'SNAP_COMMON=/var/snap/test-snapd-classic-confinement/common'                < snap_foo-env.txt
    MATCH 'SNAP_DATA=/var/snap/test-snapd-classic-confinement/x1'                      < snap_foo-env.txt
    MATCH 'SNAP_USER_DATA=/home/test/snap/test-snapd-classic-confinement_foo/x1'       < snap_foo-env.txt
    MATCH 'SNAP_USER_COMMON=/home/test/snap/test-snapd-classic-confinement_foo/common' < snap_foo-env.txt

    echo canary-instance-common > /var/snap/test-snapd-classic-confinement_foo/common/data
    echo canary-instance-rev > /var/snap/test-snapd-classic-confinement_foo/x1/data

    echo canary-regular-common > /var/snap/test-snapd-classic-confinement/common/data
    echo canary-regular-rev > /var/snap/test-snapd-classic-confinement/x1/data

    # instance can read and write data
    su -l -c "test-snapd-classic-confinement_foo.sh -c 'cat \$SNAP_COMMON/data'" test | MATCH canary-instance-common
    su -l -c "test-snapd-classic-confinement_foo.sh -c 'cat \$SNAP_DATA/data'" test | MATCH canary-instance-rev
    # shellcheck disable=SC2016
    test-snapd-classic-confinement_foo.sh -c "echo \"hello from instance \$SNAP_INSTANCE_NAME\" > \$SNAP_DATA/hello"
    MATCH 'hello from instance test-snapd-classic-confinement_foo' < /var/snap/test-snapd-classic-confinement_foo/x1/hello

    # non-instance sees the right data
    su -l -c "test-snapd-classic-confinement.sh -c 'cat \$SNAP_COMMON/data'" test | MATCH canary-regular-common
    su -l -c "test-snapd-classic-confinement.sh -c 'cat \$SNAP_DATA/data'" test | MATCH canary-regular-rev
    # and does not see instance specific data
    # shellcheck disable=SC2016
    not test-snapd-classic-confinement.sh -c "test -e \$SNAP_COMMON/foobar/hello"

restore:
    snap set system experimental.parallel-instances=null
