summary: Ensure that the content slots for classic snaps works.

details: |
    The content-sharing interface interface allows a snap to access contents from
    other snap. It is possible to have content slots in classic snaps, where
    confined snaps can connect to.

    A snap which defines the content sharing plug must be shown in the interfaces list.
    The plug must be autoconnected on install and, as usual, must be able to be
    reconnected.

# We use classic snaps for the test, so it cannot run on core
systems: [-ubuntu-core-*]

prepare: |
    echo "Ensure an empty state so that installing test-snapd-content-plug-to-classic-slot"
    echo "will pull in test-snapd-classic-content-slot *and* core"

    #shellcheck source=tests/lib/systemd.sh
    . "$TESTSLIB/systemd.sh"

    systemd_stop_units snapd.service
    "$TESTSTOOLS"/fs-state mock-file /var/lib/snapd/state.json
    systemctl start snapd
    snap wait system seed.loaded

restore: |
    snap remove test-snapd-content-plug-to-classic-slot test-snapd-classic-content-slot
    "$TESTSTOOLS"/fs-state restore-file /var/lib/snapd/state.json

execute: |
    echo "Install content plug, check that the classic provider is not pulled"
    snap install --edge test-snapd-content-plug-to-classic-slot
    if snap list test-snapd-classic-content-slot; then
        exit 1
    fi

    echo "Install classic snap with content slot - no automatic pull for classic"
    snap install --edge --classic test-snapd-classic-content-slot

    echo "Then the snap is listed as connected"
    snap connections test-snapd-classic-content-slot |
        MATCH "test-snapd-content-plug-to-classic-slot:shared-content-plug \+test-snapd-classic-content-slot:shared-content-slot"

    echo "Remove snaps, install in reverse order"
    snap remove test-snapd-content-plug-to-classic-slot test-snapd-classic-content-slot
    snap install --edge --classic test-snapd-classic-content-slot
    snap install --edge test-snapd-content-plug-to-classic-slot
    echo "Check that the content interface has been auto-connected"
    snap connections test-snapd-classic-content-slot |
        MATCH "test-snapd-content-plug-to-classic-slot:shared-content-plug \+test-snapd-classic-content-slot:shared-content-slot"

    echo "And fstab files are created"
    [ "$(find /var/lib/snapd/mount -type f -name "*.fstab" | wc -l)" -gt 0 ]

    echo "And we can use the shared content"
    test-snapd-content-plug-to-classic-slot.content-plug | MATCH "Some shared content"

    echo "And the current mount profile is the same as the desired mount profile"
    diff -u /run/snapd/ns/snap.test-snapd-content-plug-to-classic-slot.fstab /var/lib/snapd/mount/snap.test-snapd-content-plug-to-classic-slot.fstab

    echo "When the plug is disconnected"
    snap disconnect test-snapd-content-plug-to-classic-slot:shared-content-plug test-snapd-classic-content-slot:shared-content-slot

    echo "Then the fstab files are removed"
    [ "$(find /var/lib/snapd/mount -type f -name "*.fstab" | wc -l)" -eq 0 ]

    echo "When the plug is reconnected"
    snap connect test-snapd-content-plug-to-classic-slot:shared-content-plug test-snapd-classic-content-slot:shared-content-slot

    echo "Then the fstab files are recreated"
    [ "$(find /var/lib/snapd/mount -type f -name "*.fstab" | wc -l)" -gt 0 ]
