summary: Check basic seccomp rules

# This test verifies that:
# - absence of a syscall is denied
# - use of a bare syscall (ie, no arguments) is allowed
# - use of a syscall with arg filtering is allowed with matching arguments
# - use of a syscall with arg filtering is denied with unmatching arguments
#
# We choose the setpriority syscall for these tests since it is available on
# all architectures and can be easily used to test all of the above. As part of
# its testing, this test will modify the snap's seccomp filter and recompile
# it. On strict mode systems, it will also adjust the apparmor profile to allow
# 'capability nice' so it doesn't interfere with anything.

environment:
    SRC: /var/lib/snapd/seccomp/bpf/snap.test-snapd-sh.test-snapd-sh.src
    BIN: /var/lib/snapd/seccomp/bpf/snap.test-snapd-sh.test-snapd-sh.bin
    AAP: /var/lib/snapd/apparmor/profiles/snap.test-snapd-sh.test-snapd-sh

prepare: |
    echo "Install a helper snap with default confinement"
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB"/snaps.sh
    install_local test-snapd-sh
    cp "$SRC" "$SRC".orig
    if [ "$(snap debug confinement)" = strict ]; then
        cp "$AAP" "$AAP".orig
        sed 's/^}/capability sys_nice,\n}\n/g' "$AAP".orig > "$AAP"
        apparmor_parser -r "$AAP"
    fi

restore: |
    mv -f "$SRC".orig "$SRC"
    if [ -f "$AAP".orig ]; then
        mv -f "$AAP".orig "$AAP"
    fi

execute: |
    #shellcheck source=tests/lib/snaps.sh
    . "$TESTSLIB/dirs.sh"

    # other tests ensure seccomp is available so we can skip any systems that
    # don't have it
    if ! snap debug sandbox-features --required seccomp:bpf-argument-filtering ; then
        exit 0
    fi

    echo "Remove any setpriority rules from the filter"
    sed 's/^\(setpriority.*\)/#SPREAD: \1/g' "$SRC".orig > "$SRC"
    "$LIBEXECDIR/snapd/snap-seccomp" compile "$SRC" "$BIN"
    test-snapd-sh -c "nice -n 10 uptime"  2>&1 | MATCH 'Operation not permitted'
    test-snapd-sh -c "nice -n -10 uptime" 2>&1 | MATCH 'Operation not permitted'

    echo "Use bare setpriority rule"
    sed 's/^\(setpriority.*\)/#SPREAD: \1\nsetpriority/g' "$SRC".orig > "$SRC"
    "$LIBEXECDIR/snapd/snap-seccomp" compile "$SRC" "$BIN"
    ! test-snapd-sh -c "nice -n 10 uptime"  2>&1 | MATCH 'Operation not permitted'
    ! test-snapd-sh -c "nice -n -10 uptime" 2>&1 | MATCH 'Operation not permitted'

    echo "Use arg filtered setpriority rule"
    sed 's/^\(setpriority.*\)/#SPREAD: \1\nsetpriority PRIO_PROCESS 0 <=19/g' "$SRC".orig > "$SRC"
    "$LIBEXECDIR/snapd/snap-seccomp" compile "$SRC" "$BIN"
    ! test-snapd-sh -c "nice -n 10 uptime" 2>&1 | MATCH 'Operation not permitted'
    test-snapd-sh -c "nice -n -10 uptime"  2>&1 | MATCH 'Operation not permitted'
