summary: verify booting into recovery mode on UC20 systems

restore: |
  rm -f /writable/systems.json.run
  rm -f /writable/systems.label
  rm -f system-info systems.json

  snap remove http jq

debug: |
  if [ -e systems.json ]; then
      cat systems.json
  fi

execute: |
  if [[ "$SPREAD_REBOOT" == "0" ]]; then
      echo "In run mode"

      snap install jq
      # devmode as the snap does not have snapd-control
      snap install test-snapd-curl --devmode --edge

      MATCH 'snapd_recovery_mode=run' < /proc/cmdline
      # verify we are in run mode via the API
      test-snapd-curl.curl -s --unix-socket /run/snapd.socket http://localhost/v2/system-info > system-info
      jq -r '.result["system-mode"]' < system-info | MATCH 'run'

      echo "Obtain available systems"
      test-snapd-curl.curl -s --unix-socket /run/snapd.socket http://localhost/v2/systems > systems.json
      # TODO:UC20: there is only one system for now
      jq .result.systems[0].current < systems.json | MATCH 'true'
      label="$(jq -r .result.systems[0].label < systems.json)"
      test -n "$label"
      test "$label" = "$(date +%Y%m%d)"
      jq -r .result.systems[0].actions[].mode < systems.json | MATCH 'recover'

      # keep a copy of the systems dump for later reference
      cp systems.json /writable/systems.json.run
      echo "$label" > /writable/systems.label

      # request a recovery mode
      echo "Request rebooting into recovery mode"
      test-snapd-curl.curl -X POST --data '{"action":"do","mode":"recover"}' \
          -s --unix-socket /run/snapd.socket "http://localhost/v2/systems/$label"

      # XXX: is this a race between spread seeing REBOOT and machine rebooting?
      REBOOT

  elif [[ "$SPREAD_REBOOT" == "1" ]]; then
      echo "In recovery mode"
      # wait till the system seeding is finished
      snap wait system seed.loaded

      # we're running in an ephemeral system
      snap install jq
      snap install test-snapd-curl --devmode --edge

      MATCH 'snapd_recovery_mode=recover' < /proc/cmdline
      # verify we are in recovery mode via the API
      test-snapd-curl.curl -s --unix-socket /run/snapd.socket http://localhost/v2/system-info > system-info
      jq -r '.result["system-mode"]' < system-info | MATCH 'recover'

      # host data should be accessible
      test -e /run/mnt/host/ubuntu-data/systems.json.run

      test-snapd-curl.curl -s --unix-socket /run/snapd.socket http://localhost/v2/systems > systems.json
      # systems list should be identical
      diff -up /run/mnt/host/ubuntu-data/systems.json.run systems.json
      label="$(cat /run/mnt/host/ubuntu-data/systems.label)"

      MATCH "snapd_recovery_system=$label" < /proc/cmdline

      # request going back to run mode
      test-snapd-curl.curl -X POST --data '{"action":"do","mode":"run"}' \
          -s --unix-socket /run/snapd.socket "http://localhost/v2/systems/$label"
      # XXX: is this a race between spread seeing REBOOT and machine rebooting?
      REBOOT

  elif [[ "$SPREAD_REBOOT" == "2" ]]; then
      echo "In run mode again"
      test-snapd-curl.curl -s --unix-socket /run/snapd.socket http://localhost/v2/system-info > system-info
      jq -r '.result["system-mode"]' < system-info | MATCH 'run'
  fi
