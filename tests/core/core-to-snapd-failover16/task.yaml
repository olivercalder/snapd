summary: Test the failover scenario of the snapd snap installation on a UC16 system

# snapd snap is already installed by default on uc18+
systems: [ubuntu-core-16-*]

prepare: |
  # shellcheck source=tests/lib/snaps.sh
  . "$TESTSLIB/snaps.sh"
  repack_core_snap_into_snapd_snap

execute: |
  # shellcheck source=tests/lib/journalctl.sh
  . "$TESTSLIB/journalctl.sh"

  echo "Re-pack snapd with broken snapd"
  unsquashfs -d ./snapd-broken snapd-from-core.snap
  echo "" > ./snapd-broken/usr/lib/snapd/snapd
  # pick up snap-failure from the current snapd
  (cd ./snapd-broken && snap pack .)

  # get the number of times that snapd.failure was started before we do 
  # anything
  started_before="$(get_journalctl_log -u snapd.failure | grep -c 'Started Failure handling of the snapd snap.' || true)"

  echo "Now install the broken snapd"
  if snap install --dangerous ./snapd-broken/snapd_*.snap; then
      echo "installing a broken snapd should not work, test broken"
      exit 1
  fi

  echo "Verify that snapd.failure was activated when we tried to install a broken snapd"
  for _ in $(seq 60); do
      # get the number of times that snapd.failure was started
      started_after="$(get_journalctl_log -u snapd.failure | grep -c 'Started Failure handling of the snapd snap.' || true)"
      if [ "$started_after" -gt "$started_before" ] ; then
          break
      fi
      sleep 1
  done

  echo "Verify we got the expected error message"
  snap change --last=install|MATCH "there was a snapd rollback across the restart"
  echo "No snapd snap is installed"
  not snap list snapd

  test ! -e /etc/systemd/system/snapd.service
  test ! -e /etc/systemd/system/usr-lib-snapd.mount
  test ! -e /snap/snapd/x1
