summary: smoke test for the fs-state tool

execute: |
    # Run shellcheck for fs-state script
    if [ "$SPREAD_SYSTEM" = "ubuntu-18.04-64" ]; then
        shellcheck "$TESTSTOOLS"/fs-state
    fi

    # Check help
    "$TESTSTOOLS"/fs-state -h | MATCH "usage: fs-state wait-for-file"
    "$TESTSTOOLS"/fs-state --help | MATCH "usage: fs-state wait-for-file"
    "$TESTSTOOLS"/fs-state | MATCH "usage: fs-state wait-for-file"

    # Check non existing directory
    "$TESTSTOOLS"/fs-state mock-dir mytestdir
    test -d mytestdir
    test -f mytestdir.fake
    not test -d mytestdir.back

    "$TESTSTOOLS"/fs-state restore-dir mytestdir
    not test -d mytestdir

    # Check existing directory
    mkdir mytestdir
    "$TESTSTOOLS"/fs-state mock-dir mytestdir
    test -d mytestdir
    test -f mytestdir.fake
    test -d mytestdir.back
    "$TESTSTOOLS"/fs-state restore-dir mytestdir
    test -d mytestdir
    rm -r mytestdir

    # Restoring a dir which is not mocked is not allowed
    mkdir mytestdir
    not "$TESTSTOOLS"/fs-state restore-dir mytestdir

    # Check non existing file
    "$TESTSTOOLS"/fs-state mock-file mytestfile
    test -f mytestfile
    test -f mytestfile.fake
    not test -f mytestfile.back

    "$TESTSTOOLS"/fs-state restore-file mytestfile
    not test -f mytestfile

    # Check existing file
    touch mytestfile
    "$TESTSTOOLS"/fs-state mock-file mytestfile
    test -f mytestfile
    test -f mytestfile.fake
    test -f mytestfile.back
    "$TESTSTOOLS"/fs-state restore-file mytestfile
    test -f mytestfile

    # Check wait for file
    "$TESTSTOOLS"/fs-state wait-for-file mytestfile 2 .5
    rm mytestfile
    not "$TESTSTOOLS"/fs-state wait-for-file mytestfile 2 .5

    # Restoring a file which is not mocked is not allowed
    touch mytestfile
    not "$TESTSTOOLS"/fs-state restore-file mytestfile
